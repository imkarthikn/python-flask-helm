apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "demoapp.fullname" . }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/name: {{ template "demoapp.name" . }}
    app: {{ template "demoapp.name" . }}
    chart: {{ template "demoapp.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}

spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "demoapp.fullname" . }}
    spec:
      containers:
      - name: {{ template "demoapp.fullname" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ default "" .Values.image.pullPolicy | quote }}
        ports:
        - name: http
          containerPort: {{ .Values.appService.internalPort }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          timeoutSeconds: 1
        volumeMounts:
        - name: db-config
          mountPath: /app
      volumes:
      - name: db-config
        configMap: 
          name: {{ template "demoapp.fullname" . }}             

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "demoapp.fullname" . }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/name: {{ template "demoapp.name" . }}
    app: {{ template "demoapp.name" . }}
    chart: {{ template "demoapp.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}


spec:
  #replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "demoapp.fullname" . }}
    spec:
      containers:
      - name: {{ template "demoapp.fullname" . }}
        image: "mysql:5.7"
        imagePullPolicy: {{ default "" .Values.image.pullPolicy | quote }}
        ports:
        - containerPort: {{ .Values.dbService.mysqlPort }}
        env:
        - name: {{ template "demoapp.fullname" . }}
          valueFrom:
            secretKeyRef:
              name: MYSQL_ROOT_PASSWORD
              key: password
        volumeMounts:
        - name: sql
          mountPath: /docker-entrypoint-initdb.d/init.sql
        volumes:
        - name: sql
          hostpath:
            path: ../init.sql
        - name: mysql
          containerPort: 3306
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
{{ toYaml .Values.resources | indent 12 }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.dbService.mysqlPort }}
          initialDelaySeconds: 10
          timeoutSeconds: 5
